# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: 
      - dev
      - main
  pull_request:
    branches:
      - dev
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      branch:
        description: 'The branch to build'
        required: true
        - '*'         # matches every branch that doesn't contain a '/'
        - '*/*'       # matches every branch containing a single '/'
        - '**'        # matches every branch
        - '!main'     # excludes master
      environment:
        description: 'The environment to deploy to'
        required: false

env:
  non_prod: ${{ secrets.SKF_NON_PROD_MULE_ENCRYPTED_KEY }}
  prod: ${{ secrets.SKF_PROD_MULE_ENCRYPTED_KEY }}
  client_id: ${{ secrets.SKF_ANYPOINT_CONNECTED_APP_CLIENTID }}
  client_secret: ${{ secrets.SKF_ANYPOINT_CONNECTED_APP_CLIENTSECRET }}
  org_client_id: ${{ secrets.SKF_ANYPOINT_ORG_CLIENTID }}
  org_client_secret: ${{ secrets.SKF_ANYPOINT_ORG_CLIENTSECRET }}
  maven_enterprise_user: ${{ secrets.SKF_ANYPOINT_ENTERPRISE_USER }}
  maven_enterprise_pass: ${{ secrets.SKF_ANYPOINT_ENTERPRISE_PASS }}

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set up JDK 1.8
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: 8	    
    - name: Set Settings
      uses: s4u/maven-settings-action@v2.8.0
      with:
        servers: |
            [{
            "id": "anypoint-exchange-v3",
            "username": "~~~Client~~~",
            "password": "${client_id}~?~${client_secret}"
            },{
                "id": "MuleRepository",
                "username": "${maven_enterprise_user}",
                "password": "${maven_enterprise_pass}"
            }]
    - name: Build with Maven
      run: mvn -B package --file pom.xml
    - name: Stamp artifact file name with commit hash
      run: |
        artifactName1=$(ls target/*.jar | head -1)
        commitHash=$(git rev-parse --short "$GITHUB_SHA")
        artifactName2=$(ls target/*.jar | head -1 | sed "s/.jar/-$commitHash.jar/g")
        mv $artifactName1 $artifactName2
    - name: Upload artifact 
      uses: actions/upload-artifact@v3
      with:
          name: artifacts
          path: target/*.jar
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout this repo
      uses: actions/checkout@v3 
    - name: Cache dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
    - name: Set Settings
      uses: s4u/maven-settings-action@v2.8.0
      with:
        servers: |
            [{
                "id": "anypoint-exchange-v3",
                "username": "~~~Client~~~",
                "password": "${client_id}~?~${client_secret}"
                },{
                "id": "MuleRepository",
                "username": "${maven_enterprise_user}",
                "password": "${maven_enterprise_pass}"
            }]
    - uses: actions/download-artifact@v3
      with:
        name: artifacts
    - name: Deploy to Anypoint Exchange
      run: mvn clean deploy
      # if: github.ref == 'refs/heads/dev' 
      if: github.ref == ${{ github.event.inputs.branch }}
    - name: Deploy to Development from Feature branch
      run: |
        artifactName=$(ls *.jar | head -1)
        mvn clean deploy -DmuleDeploy -Denv=dev -Dreplicas=1 -DvCores=0.1 -Denvironment=Development -Dencryption.key=$non_prod -Dch=non-prod-privatespace -Djson.logger.disabledFields=null -Danypoint.platform.client_id=$org_client_id -Danypoint.platform.client_secret=$org_client_secret
      if: github.ref == ${{ github.event.inputs.branch }}
    
